{"version":3,"sources":["Components/Navbar/Navbar.js","Components/Footer/Footer.js","Components/Container/Container.js","Components/Row/Row.js","Components/Col/Col.js","Components/Button/Button.js","Components/Jumbotron/Jumbotron.js","Pages/HomePage/HomePage.js","Components/PlaylistChoices/PlaylistChoices.js","Components/SongChoices/SongChoices.js","Components/OptionsPanel/OptionsPanel.js","Components/NowPlaying/NowPlaying.js","Pages/Room/Room.js","Pages/PageNotFound/PageNotFound.js","App.js","index.js"],"names":["Navbar","props","react_default","a","createElement","class","href","width","height","alt","className","Footer","Container","Object","assign","concat","fluid","Row","Col","size","split","map","join","Button","type","onClick","center","children","MainJumbotron","reactstrap_es","dist_default","springConfig","stiffness","damping","speed","HomePage","state","open","onOpenModal","_this","setState","onCloseModal","this","Jumbotron_Jumbotron","Components_Container_Container","style","marginTop","Components_Row_Row","Components_Col_Col","Components_Button_Button","Component","PlaylistChoices","name","SongChoices","artist","OptionsPanel","NowPlaying","src","spotifyWebApi","Spotify","Room","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getRandom","arr","n","voteOptions","Array","len","length","taken","RangeError","x","Math","floor","random","console","log","params","getHashParams","loggedIn","access_token","sessionName","userPlaylists","activePlaylist","activePlaylistTracks","shuffledPlaylistTracks","nowPlaying","image","user","spotify_id","db_id","setAccessToken","handleChange","bind","assertThisInitialized","handleSubmit","event","target","value","alert","e","hashParams","r","q","window","location","hash","substring","exec","decodeURIComponent","_this2","getMyCurrentPlaybackState","then","response","item","artists","album","images","url","_this3","getUserPlaylists","items","_this4","getPlaylistTracks","_this5","getMe","id","err","_this6","axios","post","current_playlist_id","res","catch","setActiveUser","getNowPlaying","_this7","Components_NowPlaying_NowPlaying","createNewSession","Components_OptionsPanel_OptionsPanel","playlist","Components_PlaylistChoices_PlaylistChoices","setActivePlaylistDetails","checkState","key","setActive","track","Components_SongChoices_SongChoices","index_es","onClose","onChange","aria-describedby","placeholder","required","PageNotFound","App","onInputChange","BrowserRouter","Components_Navbar_Navbar","Switch","Route","exact","path","component","Components_Footer_Footer","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.82ad78e8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Navbar.css\";\r\n\r\nconst Navbar = props => {\r\n  return (\r\n    <nav class=\"navbar navbar-light bg-light\">\r\n      <a class=\"navbar-logo\" href=\"/\">\r\n        <div width=\"\" height=\"30\" alt=\"\" />\r\n      </a>\r\n      <a class=\"navbar-brand\" href=\"/\">\r\n        SoundUp\r\n      </a>\r\n      <ul>\r\n        <li className=\"nav-item\"></li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport \"./Footer.css\";\r\n\r\nconst Footer = props => {\r\n  return (\r\n    <footer class=\"footer font-small black fixed-bottom\">\r\n      <div class=\"footer-copyright text-center\">© 2018 Copyright:</div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nconst Container = props => (\r\n  <div className={`container${props.fluid ? \"-fluid\" : \"\"}`} {...props} />\r\n);\r\n\r\nexport default Container;\r\n","// Import React\r\nimport React from \"react\";\r\n\r\n// Row component\r\nconst Row = props =>\r\n    <div className={`row${props.fluid ? \"-fluid\" : \"\"}`} {...props} />;\r\n\r\n// export Row component.\r\nexport default Row;\r\n","import React from \"react\";\r\nimport \"./Col.css\";\r\n\r\nconst Col = props => {\r\n  const size = props.size\r\n    .split(\" \")\r\n    .map(size => \"col-\" + size)\r\n    .join(\" \");\r\n  return <div className={size} {...props} />;\r\n};\r\n\r\nexport default Col;\r\n","import React from 'react';\r\nimport './Button.css'\r\n\r\nconst Button = (props) => {\r\n    return (\r\n        <button type=\"button\" class=\"btn peach-gradient btn-lg\" onClick={props.onClick} center>\r\n            {props.children}\r\n        </button>\r\n    )\r\n}\r\n\r\n\r\nexport default Button;","import React from \"react\";\r\n\r\nimport { Jumbotron } from \"reactstrap\";\r\nimport TextLoop from \"react-text-loop\";\r\n\r\nimport \"./Jumbotron.css\";\r\n\r\nconst MainJumbotron = props => {\r\n  return (\r\n    <div className=\"header\">\r\n      <Jumbotron className=\"text-center jumbotron\">\r\n        <h1 className=\"display-3\">Let the music flow</h1>\r\n        <p className=\"intro-title\">\r\n          Your playlist. Your people. Your{\" \"}\r\n          <TextLoop\r\n            springConfig={{ stiffness: 300, damping: 10, speed: 170 }}\r\n            // speed= 1000ms;\r\n            children={[\"party\", \"hangout\", \"restaurant\", \"business\", \"event\"]}\r\n          />\r\n          .\r\n        </p>\r\n      </Jumbotron>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainJumbotron;\r\n","import React, { Component } from \"react\";\r\nimport Container from \"../../Components/Container\";\r\nimport Row from \"../../Components/Row\";\r\nimport Col from \"../../Components/Col\";\r\nimport Button from \"../../Components/Button\";\r\nimport Modal from \"react-responsive-modal\";\r\nimport Jumbotron from \"../../Components/Jumbotron\";\r\n\r\nclass HomePage extends Component {\r\n  state = {\r\n    open: false\r\n  };\r\n\r\n  onOpenModal = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  onCloseModal = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  render() {\r\n    const { open } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Jumbotron />\r\n        <div>\r\n          <Container\r\n            className=\"body-container\"\r\n            fluid=\"true\"\r\n            style={{ marginTop: 10 }}\r\n          >\r\n            <Row>\r\n              <Col size=\"md-5\">\r\n                <div className=\"action-panel\">\r\n                <a href=\"https://salty-chamber-18605.herokuapp.com/login\">\r\n                  <Button onClick={this.onOpenModal} center>\r\n                    Launch a room\r\n                  </Button>\r\n                  </a>\r\n                  <h5>Create a room in seconds</h5>\r\n                  <ul>\r\n                    <li>#1) Login with your Spotify account</li>\r\n                    <li>#2) Name your room and choose a master playlist</li>\r\n                    <li>#3) Share your room & let the people vote on the next song</li>\r\n                  </ul>\r\n                </div>\r\n              </Col>\r\n\r\n              <Col size=\"md-1\"></Col>\r\n\r\n              <Col size=\"md-6\">\r\n                <div className=\"info-panel\">\r\n                  <h4 class=\"featurette-heading\">\r\n                    Listen together. Vote on the next song. Give every listener\r\n                    a voice.\r\n                  </h4>\r\n                  <p class=\"lead\">\r\n                    Take your listening to the next level. Let the group or\r\n                    crowd easily participate in shaping your playlist. Throw a\r\n                    better party, please your customers or have more fun in the\r\n                    car with your friends.\r\n                  </p>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n","// eslint-disable-next-line\r\nimport React, { Component } from \"react\";\r\nimport \"./PlaylistChoices.css\";\r\n\r\n\r\n\r\n\r\nconst PlaylistChoices = props => {\r\n    return (\r\n        <button type=\"button\" class=\"playlistChoice btn peach-gradient btn-lg\" onClick={props.onClick} center>\r\n            {props.children}\r\n            <p>{props.name}</p>\r\n        </button>\r\n    )\r\n}\r\n\r\n\r\n// RecipeListItem renders a bootstrap list item containing data from the recipe api call\r\n// const SongChoices = ({ _id, handleSaveButton, title, snippet, date, url }) => (\r\n\r\n//       <Col size=\"md-4\">\r\n//         <div className=\"Song\">\r\n//         Artist\r\n//         <br />\r\n//         Song\r\n//         <button>VOTE</button>\r\n//         </div>\r\n\r\n//         <div className=\"Song\">\r\n//         Artist\r\n//         <br />\r\n//         Song\r\n//         <button>VOTE</button>\r\n//         </div>\r\n\r\n//         <div className=\"Song\">\r\n//         Artist\r\n//         <br />\r\n//         Song\r\n//         <button>VOTE</button>\r\n//         </div>\r\n\r\n//         <div className=\"Song\">\r\n//         Artist\r\n//         <br />\r\n//         Song\r\n//         <button>VOTE</button>\r\n//         </div>\r\n\r\n//       </Col>\r\n\r\n// );\r\n\r\n// Export search results list component.\r\nexport default PlaylistChoices;\r\n","import React from 'react';\r\nimport './SongChoices.css'\r\n\r\nconst SongChoices = (props) => {\r\n    return (\r\n        <button type=\"button\" class=\"songChoice btn blue-gradient btn-lg\" onClick={props.onClick} center>\r\n            {props.name} by {props.artist}\r\n        </button>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default SongChoices;","import React from \"react\";\r\nimport Col from \"../Col\";\r\nimport \"./OptionsPanel.css\";\r\n\r\nconst OptionsPanel = props => {\r\n  const size = props.size\r\n    .split(\" \")\r\n    .map(size => \"col-\" + size)\r\n    .join(\" \");\r\n\r\n  return (\r\n    <Col size=\"md-6\">\r\n      <div className=\"options-panel\">\r\n        <h5>{props.name}</h5>\r\n        <div className={size + \"options-panel\"} {...props} />\r\n      </div>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default OptionsPanel;\r\n","import React from \"react\";\r\nimport \"./NowPlaying.css\";\r\n\r\nconst NowPlaying = props => {\r\n  // const size = props.size.split(\" \").map(size => \"col-\" + size).join(\" \");\r\n\r\n  return (\r\n    <div className=\"now-playing\">\r\n      <h6>\r\n       Playing Now: {props.name} by {props.artist}\r\n      </h6>\r\n      <img src={props.src} style={{ width: 150 }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NowPlaying;\r\n","import React, { Component } from \"react\";\r\nimport Row from \"../../Components/Row\";\r\nimport PlaylistChoices from \"../../Components/PlaylistChoices\"\r\nimport SongChoices from \"../../Components/SongChoices\";\r\nimport Container from \"../../Components/Container\";\r\nimport Spotify from \"spotify-web-api-js\";\r\nimport OptionsPanel from \"../../Components/OptionsPanel\";\r\nimport NowPlaying from \"../../Components/NowPlaying\";\r\nimport Button from \"../../Components/Button\";\r\nimport Modal from 'react-responsive-modal';\r\nimport axios from \"axios\";\r\nimport \"./Room.css\";\r\n\r\n\r\nvar shuffledTracks = [];\r\nvar voteOptions = [];\r\n\r\nconst spotifyWebApi = new Spotify();\r\n\r\nclass Room extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const params = this.getHashParams();\r\n    this.state = {\r\n      loggedIn: params.access_token ? true : false,\r\n      sessionName: '',\r\n\r\n      open: true,\r\n\r\n      userPlaylists: [],\r\n      activePlaylist: '05V9ZNCIMJfDhmYY6KhfUu',\r\n      activePlaylistTracks: [],\r\n      shuffledPlaylistTracks: [],\r\n      voteOptions: [],\r\n\r\n      nowPlaying: {\r\n        name: \"\",\r\n        image: ''\r\n      },\r\n\r\n      user: {\r\n        spotify_id: '',\r\n        db_id: ''\r\n      },\r\n    };\r\n\r\n    if (params.access_token) {\r\n      spotifyWebApi.setAccessToken(params.access_token);\r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({sessionName: event.target.value});\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    alert('A name was submitted: ' + this.state.sessionName);\r\n    // event.preventDefault();\r\n  }\r\n\r\n  checkState() {\r\n    console.log(this.state)\r\n  }\r\n\r\n  onOpenModal = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  onCloseModal = () => {\r\n    this.setState({ open: false });\r\n  };\r\n  \r\n\r\n  getHashParams() {\r\n    var hashParams = {};\r\n    var e,\r\n      r = /([^&;=]+)=?([^&;]*)/g,\r\n      q = window.location.hash.substring(1);\r\n    while ((e = r.exec(q))) {\r\n      hashParams[e[1]] = decodeURIComponent(e[2]);\r\n    }\r\n    return hashParams;\r\n  }\r\n\r\n  // Function to query the API and return currently-playing data for authenticated user\r\n  getNowPlaying() {\r\n    spotifyWebApi.getMyCurrentPlaybackState().then(response => {\r\n      console.log(\"NOW PLAYING DATA: \" , response)\r\n      console.log(\"Now playing: \", response)\r\n      if( this.state.nowPlaying )\r\n      this.setState({\r\n        nowPlaying: {\r\n          name: response.item.name,\r\n          artist: response.item.artists[0].name,\r\n          image: response.item.album.images[0].url\r\n        }\r\n      });\r\n      \r\n    })\r\n  }\r\n\r\n  // Function to query the API and return playlists data for authenticated user\r\n  getUserPlaylists() {\r\n    spotifyWebApi.getUserPlaylists().then(response => {\r\n     \r\n      this.setState({\r\n        userPlaylists: response.items\r\n        // user: {\r\n        //   spotify_id : response.spotify_id //this may not exactly be coming from the response or be the right name\r\n        // }\r\n      });\r\n      console.log(\"Playlists returned: \", response)\r\n      //TODO: in this function we are gonna set the state of state.\r\n      // console.log(\"SET TO STATE: \",this.setState.userPlaylists);\r\n    });\r\n \r\n  }\r\n\r\n\r\n\r\n  // Function to query the Spotify API and return the tracks for a given playlist ID (activePlaylist // currently hardCoded due to DB issues)\r\n  getPlaylistTracks() {\r\n    var activePlaylist = this.state.activePlaylist;\r\n    var spotify_id = this.state.spotify_id;\r\n    spotifyWebApi.getPlaylistTracks(spotify_id, activePlaylist).then(response => {\r\n      let songChoices = response.items; // *****\r\n      this.setState({\r\n        activePlaylistTracks: response.items,\r\n      })\r\n   \r\n    })\r\n  }\r\n\r\n  // Function to set the spotify_id (returned from authentication) to the active state as a property of user\r\n  setActiveUser() {\r\n    // Get the authenticated user\r\n      spotifyWebApi.getMe().then(response => {\r\n        this.setState({\r\n          user: {\r\n            spotify_id: response.id\r\n          }\r\n        })\r\n      }, function(err) {\r\n        console.log('Something went wrong!', err);\r\n      });\r\n  }\r\n\r\n// generateRoomUrl = () => {\r\n//   roomURL = \"https://localhost:3000/\" + this.state.spotify_id + \"/\" + this.state.activePlaylist + \"/\";\r\n//   this.setState({\r\n//     roomURL: roomURL\r\n//   })\r\n// }\r\n\r\n  \r\ngetRandom = (arr, n) => {\r\n    var voteOptions = new Array(n),\r\n        len = arr.length,\r\n        taken = new Array(len);\r\n    if (n > len)\r\n        throw new RangeError(\"getRandom: more elements taken than available\");\r\n    while (n--) {\r\n        var x = Math.floor(Math.random() * len);\r\n        voteOptions[n] = arr[x in taken ? taken[x] : x];\r\n        taken[x] = --len in taken ? taken[len] : len;\r\n    }\r\n    // return result;\r\n    \r\n    this.setState({voteOptions: voteOptions})\r\n    console.log(\"randomized songs!\", voteOptions)\r\n}\r\n\r\n  // Function to query the Spotify API for tracks when a playlist is clicked\r\n    // then use that id to query the tracks on the playlist\r\n     // THEN \r\n  setActivePlaylistDetails() {\r\n    var activePlaylist = this.state.activePlaylist;\r\n    const spotify_id = this.state.spotify_id;\r\n    var activePlaylistTracks = this.state.activePlaylistTracks\r\n    console.log(\"Clicked on playlist\")\r\n    // WRITE CODE TO START THIS PLAYLIST PLAYBACK (RANDOM?)\r\n    \r\n    // spotifyWebApi.play(activePlaylist).then(\r\n\r\n    spotifyWebApi.getPlaylistTracks(spotify_id, activePlaylist).then(response => {\r\n      this.setState({\r\n        activePlaylistTracks: response.items\r\n      })\r\n      console.log(\"Tracks returned: \", response)\r\n      // .then(getRandom(this.state.activePlaylistTracks, 3000))\r\n    })\r\n  }\r\n\r\n  \r\n   // Function to run POST request and create a Session (in MongoDB)\r\n   createNewSession() {\r\n    return axios.post('/session', {\r\n      spotify_id: this.state.user.spotify_id,\r\n      sessionName: this.state.sessionName,\r\n      current_playlist_id : \"\" \r\n    })\r\n    .then( res => {\r\n     //  if (err) {\r\n     //     console.log(err)\r\n     //  } else {\r\n        // this.setState({\r\n        //   sessionName : response.sessionName\r\n        // })\r\n        console.log(\"response from POSTING new Session: \", res)\r\n        //this.getUserPlaylists();\r\n     //  }\r\n    }).catch(err => console.log(\"from room.js...\", err)) //FIRING AHHHHHH\r\n}\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    this.getUserPlaylists();\r\n    this.setActiveUser();\r\n    this.getNowPlaying()\r\n\r\n    // this.loadRoomHistory(); *** DB\r\n  }\r\n\r\n  render() {\r\n    const { open } = this.state;\r\n\r\n    return (\r\n      <div>\r\n      <h4 className=\"sessionName\">Current Room:<br /> {this.state.sessionName}</h4>\r\n        <NowPlaying\r\n          name={this.state.nowPlaying.name}\r\n          artist={this.state.nowPlaying.artist}\r\n          src={this.state.nowPlaying.image}\r\n          style={{ width: 50 }}\r\n        />\r\n\r\n          {/* <Button onClick={() => this.createNewSession() + this.getUserPlaylists() + this.setActiveUser()} className=\"api-check-btn\">\r\n          Check My Music\r\n        </Button> */}\r\n        <button className=\"createSession\" onClick={() => this.getRandom(this.state.activePlaylistTracks, 6) + this.createNewSession()}>\r\n        Launch your room to let the people vote!</button>\r\n        <p className=\"instructions\">Choose your playlist, then click above to generate your shareable URL</p>\r\n        <Container fluid=\"false\"\r\n        className=\"body-container\"\r\n        style={{ marginTop: 20 }}\r\n        >\r\n          <Row>\r\n            <OptionsPanel size=\"md-12\" name=\"Pick Your Master Playlist\">\r\n              {this.state.userPlaylists.map(playlist => {\r\n                return (\r\n                  \r\n                  <PlaylistChoices onClick={() => this.setActivePlaylistDetails()  + this.checkState() }\r\n\r\n                    key={playlist.id}\r\n                    name={playlist.name}\r\n                    setActive={this.setActivePlaylistDetails}\r\n                    id={playlist.id}\r\n                    // onClick={this.getPlaylistSongs}\r\n                    // image = {playlist.images[2].url}\r\n                  />\r\n                );\r\n              })}\r\n            </OptionsPanel>\r\n\r\n            <OptionsPanel size=\"md-12\" name=\"Vote Options for Next Song\">\r\n              {this.state.voteOptions.map(track => {\r\n                return (\r\n                  <SongChoices\r\n                    key={track.track.id}\r\n                    name={track.track.name}\r\n                    artist={track.track.artists[0].name}\r\n                    id={track.id}\r\n                  />\r\n                );\r\n              })}\r\n            </OptionsPanel>\r\n          </Row>\r\n          <Row>\r\n          <Modal open={open} onClose={this.onCloseModal} center>\r\n           <br />\r\n                <h7 className=\"currentRoom\">Name your room</h7>\r\n                <form className=\"mainForm\">\r\n                  <div className=\"logo-transparent\" />\r\n\r\n                  <p className=\"form-brand-name\">SoundUp</p>\r\n                  {/* *** this form should be component*/}\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      value={this.state.value} \r\n                      onChange={this.handleChange}\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      id=\"room-name\"\r\n                      aria-describedby=\"room-name\"\r\n                      placeholder=\"Name your room\"\r\n                      required\r\n                      // required\r\n                    />\r\n                  </div>\r\n                  <br />\r\n                \r\n\r\n                </form>\r\n                <button  \r\n                  onClick={() => this.onCloseModal()}\r\n                  >Rock on</button>\r\n        </Modal>\r\n            </Row> \r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Room;\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\"> 404 Page Not Found </h1>\r\n      <p className=\"lead\"> Sorry, that page does not exist </p>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Navbar from \"./Components/Navbar\";\r\nimport Footer from \"./Components/Footer\";\r\nimport HomePage from \"./Pages/HomePage\";\r\nimport Room from \"./Pages/Room\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport PageNotFound from \"./Pages/PageNotFound\";\r\n\r\n// // Still need to import API (?)\r\n\r\nclass App extends Component {\r\n  state = {\r\n    open: false,\r\n    sessionName: ''\r\n  };\r\n\r\n  onOpenModal = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  onCloseModal = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  onInputChange = (event) => {\r\n    // this.preventDefault();\r\n    this.setState({sessionName: event.target.value});\r\n    // console.log(this.state.sessionName)\r\n  }\r\n  \r\n  \r\n\r\n  // handleInputChange = (event) => {\r\n  //   // Using object destructuring to create two variables (off of our event), then set the state dynamically based on those values\r\n  //   const {name, value} = event.target;\r\n  //   this.setState({[name]:value});\r\n  // };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Router>\r\n          <div>\r\n            <Navbar />\r\n            <Switch>\r\n              <Route exact path=\"/\" component={HomePage} />\r\n              <Route exact path=\"/Room\" component={Room} />\r\n              <Route component={PageNotFound} />\r\n            </Switch>\r\n\r\n            <Footer />\r\n          </div>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}